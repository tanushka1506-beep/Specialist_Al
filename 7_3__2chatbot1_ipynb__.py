# -*- coding: utf-8 -*-
"""7_3__2ChatBot1.ipynb""

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-KO3BRZkoq9n9hY_YpsJYP3onBolh9UY
"""

!pip install --upgrade certifi

!pip install pyTelegramBotAPI

import telebot

!pip  install gigachat

from google.colab import drive
drive.mount('/content/drive')

"""# –ù–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª"""

from gigachat import GigaChat
import ssl

def gpt_reauest(text):
  ssl_c = ssl.create_default_context()
  ssl_c.check_hostname = False
  ssl_c.verify_mode = ssl.CERT_NONE
  giga = GigaChat(
      credentials = open('gg.txt').read(),
      scope = 'GIGACHAT_API_PERS',
      model = 'Gigachat',
      verify_ssl_certs = False
  )
  answer = giga.chat(text)
 # print(answer.choices[0].message.content)
  return answer.choices[0].message.content

import certifi


import httpx
import ssl

# –î–ª—è Linux/Windows/Mac –ø—É—Ç–∏ –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è
ssl_context = ssl.create_default_context()
ssl_context.load_default_certs()  # –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
print(certifi.where())  # –ü–æ–∫–∞–∂–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –∫–æ—Ä–Ω–µ–≤—ã–º–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏

"""# –ù–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª"""

!pip install mathgenerator

"""# –ù–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª"""

main_menu = {
    'btn1':'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ',
    'btn2':'–î–ó',
    'btn3':'–§–æ—Ç–æ',
    'btn4':'–í–æ–ø—Ä–æ—Å GigaChat',
    'btn5':'F.A.Q.',
    'btn6':'–ò–≥—Ä–∞ –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫—É',
    'btn7':'–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ',
    'btn8':'–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ'
}
question_menu = {
    'btn1':'–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 2+2?',
    'btn2':'–ê–¥—Ä–µ—Å —à–∫–æ–ª—ã',
    'btn3':'–†–∞–±–æ—Ç–∞ –±–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω–æ–π –ø–ª–æ—â–∞–¥–∫–∏',
    'btn4':'-',
    'btn5':'-'
}

lessons = {
    '–£—Ä–æ–∫ 1':'–£—Ä–æ–∫–∏\–£—Ä–æ–∫ 1',
    '–£—Ä–æ–∫ 2':'–£—Ä–æ–∫–∏\–£—Ä–æ–∫ 2',
    '–£—Ä–æ–∫ 3':'–£—Ä–æ–∫–∏\–£—Ä–æ–∫ 3',
    '–£—Ä–æ–∫ 4':'–£—Ä–æ–∫–∏\–£—Ä–æ–∫ 4',
    '–£—Ä–æ–∫ 5':'–£—Ä–æ–∫–∏\–£—Ä–æ–∫ 5'
}

"""# –ù–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª"""

import telebot
from telebot import types
import pickle
import os
from mathgenerator import mathgen
import random

bot = telebot.TeleBot('8430625002:AAG83jtgQRWwsEnKV6y1gJASw6oOqm_BJlM')

user_progres = {}
math_levels = [[1,2],[3,4],[5,6]]
questions = []

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

btn_info = types.KeyboardButton('üìã –û–± –û–ì–≠')
btn_schedule = types.KeyboardButton('üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
btn_topics = types.KeyboardButton('üìö –ü—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —Ç–µ–º—ã')
btn_zap = types.KeyboardButton('üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è')
btn_pay = types.KeyboardButton('üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ')
btn_questions = types.KeyboardButton('‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã')
btn_menu = types.KeyboardButton('–ú–µ–Ω—é')
btn_1 =types.KeyboardButton('–ò–≥—Ä–∞ –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫—É')
btn_2 =types.KeyboardButton('–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ')
btn_3 =types.KeyboardButton('–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ')


lessons = {
    '–£—Ä–æ–∫ 1':'/content/–£—Ä–æ–∫–∏/–£—Ä–æ–∫ 1',
    '–£—Ä–æ–∫ 2':'/content/–£—Ä–æ–∫–∏/–£—Ä–æ–∫ 2',
    '–£—Ä–æ–∫ 3':'/content/–£—Ä–æ–∫–∏/–£—Ä–æ–∫ 3',
    '–£—Ä–æ–∫ 4':'/content/–£—Ä–æ–∫–∏/–£—Ä–æ–∫ 4',
    '–£—Ä–æ–∫ 5':'/content/–£—Ä–æ–∫–∏/–£—Ä–æ–∫ 5'
}

def load_user_data(): #–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
    if os.path.exists('user_data.pkl'):
        with open('user_data.pkl', 'rb') as f:
            return pickle.load(f)
    return {}

def save_user_data(data):#–≤—ã–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
    with open('user_data.pkl','wb') as f:
        pickle.dump(data, f)

def is_user_registered(user_id): #–ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
    user_data = load_user_data()
    if str(user_id) in list(user_data.keys()):
        return True
    else:
        return False

def show_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(btn_info, btn_schedule, btn_topics, btn_zap, btn_pay, btn_questions,btn_1,btn_2,btn_3)
    bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

def math_game(message):
    if message.text == '–ú–µ–Ω—é':#–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –ø–æ –∂–µ–ª–∞–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        show_menu(message)
        return
    user_id = str(message.from_user.id)
    global user_progres
    user_progres[user_id] = [0,0,'']
    markup_line = types.InlineKeyboardMarkup()
    level_math = load_user_data()[user_id]['level_math']#–±–µ—Ä—ë–º –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–≤–Ω—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏
    problem, answer = mathgen.genById(math_levels[level_math][random.randint(0,len(math_levels[level_math])-1)])
    problem = problem.replace(r'\cdot','*').replace('$','')
    answer = answer.replace('$','')
    corr = random.randint(0,3)
    for i in range(4):
        _, fake = mathgen.genById(math_levels[level_math][random.randint(0,len(math_levels[level_math])-1)])
        fake = fake.replace('$','')
        btn = types.InlineKeyboardButton(
            text = f'{answer if i==corr else fake}',#–µ—Å–ª–∏ i –∏ corr —Ä–∞–≤–Ω—ã, –ø–∏—à–µ—Ç—Å—è answer, –∏–Ω–∞—á–µ fake
            callback_data=f'math_{i}_{corr}_{problem}'
        )
        markup_line.add(btn)
    msg = bot.send_message(user_id, f'–†–µ—à–∏—Ç–µ –ø—Ä–∏–º–µ—Ä {problem}', reply_markup=markup_line)
    user_progres[user_id][2] = msg.message_id


def lesson_selection(message):
    if message.text == '–ú–µ–Ω—é': #–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –º–µ–Ω—é - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è
        show_menu(message)
        return
    lesson = message.text #—Å—á–∏—Ç—ã–≤–∞–µ–º —É—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª
    lesson_folder = lessons[lesson] #—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—É—Ç—å –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–∞–ø–∫–µ
    try:
        send_materials(message,lesson_folder)
        bot.send_message(message.chat.id, f'–§–∞–π–ª—ã —É—Ä–æ–∫–∞ {lesson} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã')
    except BaseException:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤')
    show_menu(message)

def send_materials(message, folder_path):
    for filename in os.listdir(folder_path):
        file_path = os.path.join(folder_path, filename)
        if filename.endswith('.txt'):
            with open(file_path, 'r', encoding='utf-8') as file:
                bot.send_message(message.from_user.id, f"–¢–µ–∫—Å—Ç —É—Ä–æ–∫–∞ {file.read()}")
        elif filename.endswith(('.jpg','.jpeg','.png')):
            with open(file_path, 'rb') as photo:
                bot.send_photo(message.from_user.id,photo)
        elif filename.endswith(('.mp4','.mov')):
            with open(file_path, 'rb') as video:
                bot.send_video(message.from_user.id,video)
        elif filename.endswith('.pdf'):
            with open(file_path, 'rb') as pdf:
                bot.send_document(message.from_user.id,pdf, caption='–£—á–µ–±–Ω—ã–π —Ñ–∞–π–ª')
        elif filename.endswith('.mp3'):
            with open(file_path, 'rb') as audio:
                bot.send_document(message.from_user.id,audio, caption='–ê—É–¥–∏–æ —Ñ–∞–π–ª')
                #–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–∫–∂–µ bot.send_audio()
def test_mode(message):
    if message.text == '–ú–µ–Ω—é': #–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –º–µ–Ω—é - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è
        show_menu(message)
        return
    global questions, user_progres
    user_id = str(message.from_user.id)
    user_progres[user_id] = [0,0,'']
    markup = types.ReplyKeyboardMarkup()
    markup.add('–ú–µ–Ω—é')
    lesson_name = list(lessons.keys())[int(message.text)-1]
    bot.send_message(user_id, f"–ù–∞—á–∏–Ω–∞–µ—Ç —Ç–µ—Å—Ç –ø–æ —É—Ä–æ–∫—É {lesson_name}",reply_markup=markup)
    try:
        questions = open('/content/test_'+str(message.text)+'.txt','r',encoding='utf-8').readlines()
    except BaseException:
        bot.send_message(user_id,'–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞')
        show_menu(message)
        return
    send_question(message, questions[user_progres[user_id][0]])

def send_question(message, question):
    markup = types.InlineKeyboardMarkup()
    parts = question.split('_')
    user_id = str(message.from_user.id)
    #–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 2+2?_1_2_3_4_3
    #–í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π parts –ø–æ–ª—É—á–∏–º —Å–ø–∏—Å–æ–∫ ['–°–∫–æ–ª—å–∫–æ..','1','2','3','4','3']
    for i, answer in enumerate(parts[1:-1]):
        btn = types.InlineKeyboardButton(
            text = answer,
            callback_data=f'answer_{user_progres[user_id][0]}_{i}_{parts[-1]}'
        )
        markup.add(btn)
    msg = bot.send_message(user_id, f'{user_progres[user_id][0]+1}. –í–æ–ø—Ä–æ—Å {parts[0]}',reply_markup=markup)
    user_progres[user_id][2] = msg.message_id
@bot.callback_query_handler(func=lambda call: call.data.startswith("answer_"))
def handle_answer(message):
    _,ques,answ,corr = message.data.split('_')
    user_id = str(message.from_user.id)
    bot.edit_message_text(
        chat_id=user_id,
        message_id=user_progres[user_id][2],
        text=f'{ques} \n–ù–æ–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ - {int(answ)+1}',
        reply_markup=None
    )
    user_progres[user_id][0]+=1
    if int(answ) == int(corr):
        user_progres[user_id][1]+=1
    if user_progres[user_id][0] != len(questions):
        bot.send_message(user_id, '–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å')
        send_question(message, questions[user_progres[user_id][0]])
    else:
        bot.send_message(user_id, '–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!')
        bot.send_message(user_id, f'–¢—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ {user_progres[user_id][1]}'
                         f' –∏–∑ {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤')
        user_data = load_user_data()
        score = round(user_progres[user_id][1]*100/len(questions),2)
        if score >= 60:
            user_data[user_id]['level']+=1
            bot.send_message(user_id, '–í—ã –ø—Ä–æ—à–ª–∏ —Ç–µ—Å—Ç –ø–æ —ç—Ç–æ–º—É –º–æ–¥—É–ª—é')
        else:
            bot.send_message(user_id, '–í—ã –Ω–µ –ø—Ä–æ—à–ª–∏ —Ç–µ—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
        save_user_data(user_data)
        show_menu(message)

@bot.callback_query_handler(func=lambda call: call.data.startswith('math_'))
#—Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –º–∞—Ç. –ø—Ä–∏–º–µ—Ä
def math_answer(message):
    _,answ,corr,problem = message.data.split('_')
    user_id = str(message.from_user.id)
    bot.edit_message_text(
        chat_id=user_id,
        message_id=user_progres[user_id][2],
        text=f'–ü—Ä–∏–º–µ—Ä {problem}, –≤–∞—à –æ—Ç–≤–µ—Ç ‚Ññ{answ}',
        reply_markup=None
    )
    user_data = load_user_data()
    user_id = str(message.from_user.id)
    if corr==answ:
        user_data[user_id]['score_math']+=1
        if user_data[user_id]['score_math']>=5:
            if user_data[user_id]['level_math'] <2:
                user_data[user_id]['level_math']+=1
            user_data[user_id]['score_math']=0
        save_user_data(user_data)
        bot.send_message(user_id,'–ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
    else:
        bot.send_message(user_id,'–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!')
    msg = bot.send_message(user_id,f'–ù–∞—á–∞—Ç—å —Å–Ω–æ–≤–∞? –í–∞—à–∏ –æ—á–∫–∏ - {user_data[user_id]["score_math"]}'
                           f', –≤–∞—à —É—Ä–æ–≤–µ–Ω—å - {user_data[user_id]["level_math"]}')
    bot.register_next_step_handler(msg, math_game)


# –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã
PAYMENT_DATA = {
    'sber': {
        'name': '–°–±–µ—Ä–±–∞–Ω–∫',
        'phone': '89806505637',  # –ù–æ–º–µ—Ä –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        'pay_link': 'https://www.sberbank.com/sms/pbpn?requisiteNumber=79806505637',
        'qr_code_path': 'QRsber.jfif',
        'amount': 1000,
        'has_qr': True
    },
    'tinkoff': {
        'name': '–¢–ë–∞–Ω–∫',
        'phone': '89806505637',  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä
        'amount': 1000,
        'has_qr': False
    },
    'vtb': {
        'name': '–í–¢–ë',
        'phone': '89806505637',  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä
        'amount': 1000,
        'has_qr': False
    },
    #'admin_phone': '79806505637'  # –ù–æ–º–µ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    'admin_phone': '79109705122'  # –ù–æ–º–µ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
}

@bot.message_handler(func=lambda message: message.text == 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ')
def handle_payment(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn_sber = types.InlineKeyboardButton("üíô –°–±–µ—Ä–±–∞–Ω–∫ (QR/–Ω–æ–º–µ—Ä)", callback_data='bank_sber')
    btn_tinkoff = types.InlineKeyboardButton("üü° –¢–ë–∞–Ω–∫ (–ø–æ –Ω–æ–º–µ—Ä—É)", callback_data='bank_tinkoff')
    btn_vtb = types.InlineKeyboardButton("üîµ –í–¢–ë (–ø–æ –Ω–æ–º–µ—Ä—É)", callback_data='bank_vtb')
    markup.add(btn_sber, btn_tinkoff, btn_vtb)

    bot.send_message(
        message.chat.id,
        "üè¶ –í—ã–±–µ—Ä–∏—Ç–µ –±–∞–Ω–∫ –¥–ª—è –æ–ø–ª–∞—Ç—ã:",
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: call.data.startswith('bank_'))
def process_bank_selection(call):
    bank_key = call.data.split('_')[1]
    bank = PAYMENT_DATA[bank_key]

    if bank['has_qr']:
        send_sber_payment(call, bank)
    else:
        send_simple_payment(call, bank)

def send_sber_payment(call, bank):
    payment_text = f"""
üí≥ <b>–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ {bank['name']}</b>

1. <b>–°–ø–æ—Å–æ–± 1:</b> –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω–∞ –Ω–æ–º–µ—Ä:
   <b>{bank['phone']}</b>

2. <b>–°–ø–æ—Å–æ–± 2:</b> –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:
   {bank['pay_link']}

3. <b>–°–ø–æ—Å–æ–± 3:</b> –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –Ω–∏–∂–µ

–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ "–Ø –æ–ø–ª–∞—Ç–∏–ª"
"""

    markup = types.InlineKeyboardMarkup()
    btn_paid = types.InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data=f'confirm_{bank["name"]}')
    markup.add(btn_paid)

    try:
        bot.send_message(
            call.message.chat.id,
            payment_text,
            parse_mode='HTML',
            reply_markup=markup
        )

        if os.path.exists(bank['qr_code_path']):
            with open(bank['qr_code_path'], 'rb') as qr_file:
                bot.send_photo(
                    call.message.chat.id,
                    qr_file,
                    caption=f"üì≤ –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ {bank['name']}"
                )
        else:
            bot.send_message(
                call.message.chat.id,
                "‚ö†Ô∏è QR-–∫–æ–¥ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã"
            )

        bot.delete_message(call.message.chat.id, call.message.message_id)

    except Exception as e:
        bot.send_message(
            call.message.chat.id,
            f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ–º–µ—Ä: {bank['phone']}"
        )

def send_simple_payment(call, bank):
    payment_text = f"""
üí≥ <b>–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ {bank['name']}</b>

1. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ <b>{bank['amount']} —Ä—É–±.</b> –Ω–∞ –Ω–æ–º–µ—Ä:
   <b>{bank['phone']}</b>

2. –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —É–∫–∞–∂–∏—Ç–µ:
   - –§–ò–û —É—á–µ–Ω–∏–∫–∞
   - –î–∞—Ç—É –∑–∞–Ω—è—Ç–∏—è

–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ "–Ø –æ–ø–ª–∞—Ç–∏–ª"
"""

    markup = types.InlineKeyboardMarkup()
    btn_paid = types.InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data=f'confirm_{bank["name"]}')
    markup.add(btn_paid)

    bot.send_message(
        call.message.chat.id,
        payment_text,
        parse_mode='HTML',
        reply_markup=markup
    )
    bot.delete_message(call.message.chat.id, call.message.message_id)

@bot.callback_query_handler(func=lambda call: call.data.startswith('confirm_'))
def confirm_payment(call):
    bank_name = call.data.split('_')[1]

    markup = types.InlineKeyboardMarkup(row_width=1)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏
    whatsapp_url = f"https://wa.me/{PAYMENT_DATA['admin_phone']}?text=–ß–µ–∫%20–æ–ø–ª–∞—Ç—ã%20({bank_name})"
    telegram_url = f"https://t.me/+{PAYMENT_DATA['admin_phone']}"  # –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ @username –µ—Å–ª–∏ –µ—Å—Ç—å

    markup.add(
        types.InlineKeyboardButton("üì≤ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp", url=whatsapp_url),
        types.InlineKeyboardButton("‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram", url=telegram_url)
    )

    instruction = f"""
üì® <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É</b>

1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞
3. –£–∫–∞–∂–∏—Ç–µ:
   - –§–ò–û —É—á–µ–Ω–∏–∫–∞
   - –î–∞—Ç—É –∑–∞–Ω—è—Ç–∏—è
   - –°—É–º–º—É –æ–ø–ª–∞—Ç—ã
   - –ë–∞–Ω–∫: {bank_name}

<b>–í–∞–∂–Ω–æ:</b> –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ Telegram –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ –Ω–æ–º–µ—Ä:
{PAYMENT_DATA['admin_phone']}
"""

    try:
        bot.send_message(
            call.message.chat.id,
            instruction,
            parse_mode='HTML',
            reply_markup=markup
        )
    except Exception as e:
        error_msg = f"""
‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ</b>

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ –Ω–æ–º–µ—Ä:
{PAYMENT_DATA['admin_phone']}

–ò —É–∫–∞–∂–∏—Ç–µ:
- –§–ò–û —É—á–µ–Ω–∏–∫–∞
- –î–∞—Ç—É –∑–∞–Ω—è—Ç–∏—è
- –°—É–º–º—É –æ–ø–ª–∞—Ç—ã
- –ë–∞–Ω–∫: {bank_name}
"""
        bot.send_message(
            call.message.chat.id,
            error_msg,
            parse_mode='HTML'
        )


# –ú–µ–Ω—é –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Ç–µ–º
topics_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
btn_lesson1 = types.KeyboardButton('–£—Ä–æ–∫ 1: –ê–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è')
btn_lesson2 = types.KeyboardButton('–£—Ä–æ–∫ 2: –ì–µ–æ–º–µ—Ç—Ä–∏—è —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤')
btn_back = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')
topics_markup.add(btn_lesson1, btn_lesson2, btn_back)

# –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π FAQ
FAQ = {
    # –û–± –û–ì–≠
    "—Ñ–æ—Ä–º–∞—Ç —ç–∫–∑–∞–º–µ–Ω–∞": "–û–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 2 –º–æ–¥—É–ª–µ–π: –ê–ª–≥–µ–±—Ä–∞ (17 –∑–∞–¥–∞—á) –∏ –ì–µ–æ–º–µ—Ç—Ä–∏—è (9 –∑–∞–¥–∞—á). –í—Å–µ–≥–æ 26 –∑–∞–¥–∞–Ω–∏–π (20 –±–∞–∑–æ–≤—ã—Ö, 6 –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏).",
    "–¥–∞—Ç–∞ —ç–∫–∑–∞–º–µ–Ω–∞": "–û—Å–Ω–æ–≤–Ω–æ–π –ø–µ—Ä–∏–æ–¥ –û–ì–≠ –≤ 2025 –≥–æ–¥—É: 20 –º–∞—è. –†–µ–∑–µ—Ä–≤–Ω—ã–µ –¥–Ω–∏: 26 –∏—é–Ω—è –∏ 2 –∏—é–ª—è.",
    "—Å–∫–æ–ª—å–∫–æ –¥–ª–∏—Ç—Å—è": "–≠–∫–∑–∞–º–µ–Ω –¥–ª–∏—Ç—Å—è 3 —á–∞—Å–∞ 55 –º–∏–Ω—É—Ç (235 –º–∏–Ω—É—Ç).",
    "–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª": "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª –¥–ª—è —Å–¥–∞—á–∏ - 8 (–∏–∑ 32 –≤–æ–∑–º–æ–∂–Ω—ã—Ö).",
    "–∫–∞–∫ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª - 32. –ó–∞ –º–æ–¥—É–ª—å –ê–ª–≥–µ–±—Ä–∞ - 20 –±–∞–ª–ª–æ–≤, –∑–∞ –ì–µ–æ–º–µ—Ç—Ä–∏—é - 12 –±–∞–ª–ª–æ–≤.",

    # –û –∑–∞–Ω—è—Ç–∏—è—Ö
    "—Å—Ç–æ–∏–º–æ—Å—Ç—å": "–†–∞–∑–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ - 1 000 —Ä—É–±. –ê–±–æ–Ω–µ–º–µ–Ω—Ç: 4 –∑–∞–Ω—è—Ç–∏—è - 3 000 —Ä—É–±, 8 –∑–∞–Ω—è—Ç–∏–π - 5 000 —Ä—É–±.",
    "—Å–∫–æ–ª—å–∫–æ –∑–∞–Ω—è—Ç–∏–π": "–ó–∞–Ω—è—Ç–∏—è –ø—Ä–æ—Ö–æ–¥—è—Ç 1-2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é. –ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —É–¥–æ–±–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫.",
    "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–Ω—è—Ç–∏—è": "–û–±—ã—á–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –¥–ª–∏—Ç—Å—è 60 –º–∏–Ω—É—Ç, –∏–Ω—Ç–µ–Ω—Å–∏–≤ - 90 –º–∏–Ω—É—Ç.",
    "—Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –≤ –≥—Ä—É–ø–ø–µ": "–í –≥—Ä—É–ø–ø–∞—Ö 5-8 —á–µ–ª–æ–≤–µ–∫ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.",
    "–º–æ–∂–Ω–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ": "–î–∞, –≤–æ–∑–º–æ–∂–Ω—ã –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è. –°—Ç–æ–∏–º–æ—Å—Ç—å - 1 500 —Ä—É–±/–∑–∞–Ω—è—Ç–∏–µ.",

    # –û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö
    "–∫—Ç–æ –ø—Ä–µ–ø–æ–¥–∞–µ—Ç": "–ó–∞–Ω—è—Ç–∏—è –≤–µ–¥—É—Ç –æ–ø—ã—Ç–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ —Å –ø–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–∏–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º, —ç–∫—Å–ø–µ—Ä—Ç—ã –û–ì–≠ –∏ –ï–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ.",
    "–æ–ø—ã—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π": "–ù–∞—à–∏ –ø–µ–¥–∞–≥–æ–≥–∏ –≥–æ—Ç–æ–≤—è—Ç –∫ –û–ì–≠ –±–æ–ª–µ–µ 10 –ª–µ—Ç, —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª —É—á–µ–Ω–∏–∫–æ–≤ - 25+, —è–≤–ª—è—é—Ç—Å—è —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ –û–ì–≠ –∏ –ï–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ.",

    # –û –ø—Ä–æ–≥—Ä–∞–º–º–µ
    "–∫–∞–∫–∏–µ —Ç–µ–º—ã": "–ü—Ä–æ—Ö–æ–¥–∏–º –≤—Å—é —à–∫–æ–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É: –∞–ª–≥–µ–±—Ä—É, –≥–µ–æ–º–µ—Ç—Ä–∏—é, —Ç–µ–æ—Ä–∏—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π.",
    "–∫–∞–∫ —Å—Ç—Ä–æ–∏—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∞": "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ —É—Ä–æ–≤–µ–Ω—å –≥—Ä—É–ø–ø—ã. 70% –≤—Ä–µ–º–µ–Ω–∏ - –ø—Ä–∞–∫—Ç–∏–∫–∞.",
    "—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤": "–†–∞–∑–±–∏—Ä–∞–µ–º –±–æ–ª–µ–µ 10 —Ç–∏–ø–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –û–ì–≠ –∑–∞ –∫—É—Ä—Å. –í–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–æ—à–ª—ã—Ö –ª–µ—Ç, –î–µ–º–æ–≤–µ—Ä—Å–∏—è –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –°—Ç–∞—Ç–ì—Ä–∞–¥.",
    "–±—É–¥–µ—Ç –ª–∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ": "–î–∞, –≤ –∫–æ–Ω—Ü–µ –∫—É—Ä—Å–∞ - 2 –Ω–µ–¥–µ–ª–∏ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ–º.",

    # –û –∑–∞–ø–∏—Å–∏
    "–∫–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è": "–ó–≤–æ–Ω–∏—Ç–µ +7 (910) 970-51-22 –∏–ª–∏ –ø–∏—à–∏—Ç–µ –≤ WhatsApp –∏–ª–∏ Telegram.",
    "–Ω—É–∂–Ω–∞ –ª–∏ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞": "–î–∞, –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ—Å—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ –Ω—É–∂–Ω–∞ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 1000 —Ä—É–±.",
    "–º–æ–∂–Ω–æ –æ–Ω–ª–∞–π–Ω": "–î–∞, –µ—Å—Ç—å –æ–Ω–ª–∞–π–Ω-–≥—Ä—É–ø–ø—ã. –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–∞–∫–∞—è –∂–µ.",

    # –û –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö
    "–Ω—É–∂–Ω—ã —É—á–µ–±–Ω–∏–∫–∏": "–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Ç–µ—Ç—Ä–∞–¥—å 48 –ª–∏—Å—Ç–æ–≤.",
    "–¥–∞–µ—Ç–µ –ª–∏ –∑–∞–¥–∞–Ω–∏—è": "–î–∞, –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è - –¥–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π.",
    "–µ—Å—Ç—å –ª–∏ –ø—Ä–æ–±–Ω–∏–∫–∏": "–ö–∞–∂–¥—ã–µ 2 –Ω–µ–¥–µ–ª–∏ –ø–∏—à–µ–º –ø—Ä–æ–±–Ω—ã–π –û–ì–≠ —Å —Ä–∞–∑–±–æ—Ä–æ–º –æ—à–∏–±–æ–∫.",

    # –î—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã
    "—Å–∫–∏–¥–∫–∏": "–°–∫–∏–¥–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ –Ω–∞ 4 –∏–ª–∏ 8 –∑–∞–Ω—è—Ç–∏–π –≤ –º–µ—Å—è—Ü. –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ –Ω–∞ –ø–æ–ª–≥–æ–¥–∞ - —Å–∫–∏–¥–∫–∞ 10%.",
    "–º–æ–∂–Ω–æ –ª–∏ –≤–µ—Ä–Ω—É—Ç—å –¥–µ–Ω—å–≥–∏": "–ü—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞ 2+ –¥–Ω—è - –∑–∞–Ω—è—Ç–∏–µ –º–æ–∂–Ω–æ –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å —Å –¥—Ä—É–≥–æ–π –≥—Ä—É–ø–ø–æ–π. –ü—Ä–∏ –±–æ–ª–µ–∑–Ω–∏ - –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è –ø–µ—Ä–µ–Ω–æ—Å—è—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü (–ø–æ —Å–ø—Ä–∞–≤–∫–µ).",
    "–µ—Å—Ç—å –ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç": "–î–∞, –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –∫—É—Ä—Å–∞ –≤—ã–¥–∞–µ—Ç—Å—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç.",
    "–∫–æ–≥–¥–∞ –Ω–∞—á–∞–ª–æ": "–ù–∞–±–æ—Ä –≤ –≥—Ä—É–ø–ø—ã –∏–¥–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ. –ú–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É - –º—ã –≤–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–º –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ.",

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ–± –û–ì–≠
    "–∫–∞–∫–∏–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã": "–ù–∞ –û–ì–≠ —Ä–∞–∑—Ä–µ—à–µ–Ω —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –±–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–µ–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º Casio FX-82.",
    "–º–æ–∂–Ω–æ –ª–∏ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º": "–ù–µ—Ç, —Ç–µ–ª–µ—Ñ–æ–Ω—ã –∏ smart-—á–∞—Å—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã. –ü—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ - —É–¥–∞–ª–µ–Ω–∏–µ —Å —ç–∫–∑–∞–º–µ–Ω–∞.",
    "–∫–∞–∫ –ø–æ–¥–∞—Ç—å –∞–ø–µ–ª–ª—è—Ü–∏—é": "–ê–ø–µ–ª–ª—è—Ü–∏—é –º–æ–∂–Ω–æ –ø–æ–¥–∞—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –¥–Ω–µ–π –ø–æ—Å–ª–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Å–≤–æ–µ–π —à–∫–æ–ª–µ.",
    "—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á —Ä–µ—à–∏—Ç—å": "–î–ª—è —Ç—Ä–æ–π–∫–∏ –Ω—É–∂–Ω–æ —Ä–µ—à–∏—Ç—å 8 –∑–∞–¥–∞—á, –¥–ª—è —á–µ—Ç–≤–µ—Ä–∫–∏ - 15, –¥–ª—è –ø—è—Ç–µ—Ä–∫–∏ - 22+. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –º–∏–Ω–∏–º—É–º 2 –±–∞–ª–ª–∞ –ø–æ –≥–µ–æ–º–µ—Ç—Ä–∏–∏.",
    "–∫–∞–∫–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã": "–í—ã–¥–∞–¥—É—Ç –±–∞–∑–æ–≤—ã–µ —Ñ–æ—Ä–º—É–ª—ã, –Ω–æ –ª—É—á—à–µ –∏—Ö –∑–Ω–∞—Ç—å –Ω–∞–∏–∑—É—Å—Ç—å.",

    # –í–æ–ø—Ä–æ—Å—ã –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ
    "—Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É": "–ù–∞—á–Ω–∏—Ç–µ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–µ–ª–æ–≤. –ú—ã –ø—Ä–æ–≤–æ–¥–∏–º –≤—Ö–æ–¥–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.",
    "—Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è": "–û–ø—Ç–∏–º–∞–ª—å–Ω–æ - 6-8 –º–µ—Å—è—Ü–µ–≤ –ø—Ä–∏ 2 –∑–∞–Ω—è—Ç–∏—è—Ö –≤ –Ω–µ–¥–µ–ª—é.",
    "–º–æ–∂–Ω–æ —É—Å–ø–µ—Ç—å –∑–∞ –º–µ—Å—è—Ü": "–î–∞, –Ω–æ —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π –∫—É—Ä—Å (4-5 –∑–∞–Ω—è—Ç–∏–π –≤ –Ω–µ–¥–µ–ª—é).",
    "–∫–∞–∫–∏–µ —Å–∞–º—ã–µ —Å–ª–æ–∂–Ω—ã–µ —Ç–µ–º—ã": "–ß–∞—â–µ –≤—Å–µ–≥–æ –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–µ–æ–º–µ—Ç—Ä–∏–µ–π (–∑–∞–¥–∞—á–∏ –Ω–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ) –∏ –≥—Ä–∞—Ñ–∏–∫–∞–º–∏.",
    "–∫–∞–∫ –±—ã—Å—Ç—Ä–æ —Å—á–∏—Ç–∞—Ç—å": "–î–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —É—Å—Ç–Ω–æ–≥–æ —Å—á–µ—Ç–∞ –∏ –∞–ª–≥–æ—Ä–∏—Ç–º—ã —Ä–µ—à–µ–Ω–∏—è.",

    # –í–æ–ø—Ä–æ—Å—ã –æ –∑–∞–Ω—è—Ç–∏—è—Ö
    "–º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –≥—Ä—É–ø–ø—É": "–î–∞, –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ –¥—Ä—É–≥—É—é –≥—Ä—É–ø–ø—É –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç.",
    "–µ—Å—Ç—å –ª–∏ –ø–µ—Ä–µ—Ä—ã–≤": "–ú–µ–∂–¥—É –∑–∞–Ω—è—Ç–∏—è–º–∏ - 10 –º–∏–Ω—É—Ç –ø–µ—Ä–µ—Ä—ã–≤. –í –∏–Ω—Ç–µ–Ω—Å–∏–≤–∞—Ö - 15 –º–∏–Ω—É—Ç.",
    "–º–æ–∂–Ω–æ —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏": "–î–∞, –ª—é–±–æ–µ –∑–∞–Ω—è—Ç–∏–µ –º–æ–∂–Ω–æ –ø–æ—Å–µ—Ç–∏—Ç—å —Å —Ä–æ–¥–∏—Ç–µ–ª–µ–º.",
    "–µ—Å—Ç—å –ª–∏ –≤–∏–¥–µ–æ—Ä–∞–∑–±–æ—Ä—ã": "–î–∞, –≤—Å–µ –ø—Ä–æ–±–Ω–∏–∫–∏ —Ä–∞–∑–±–∏—Ä–∞–µ–º –Ω–∞ –≤–∏–¥–µ–æ –∏ –≤—ã—Å—ã–ª–∞–µ–º –∑–∞–ø–∏—Å–∏.",
    "–∫–∞–∫ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å": "–†–∞–∑ –≤ –º–µ—Å—è—Ü - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º —Ä–∞–∑–±–æ—Ä–æ–º –æ—à–∏–±–æ–∫.",

    # –í–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö
    "–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è": "–î–∞, –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è.",
    "–µ—Å—Ç—å –ª–∏ –º–æ–ª–æ–¥—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏": "–î–∞, –Ω–æ –≤—Å–µ –æ–Ω–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —Å—Ç—Ä–æ–≥–∏–π –æ—Ç–±–æ—Ä –∏ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—É.",
    "–∫—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∑": "–î–æ–º–∞—à–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞—à –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏.",
    "–µ—Å—Ç—å –ª–∏ –∫—É—Ä–∞—Ç–æ—Ä": "–î–∞, –∑–∞ –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø–æ–π –∑–∞–∫—Ä–µ–ø–ª–µ–Ω –∫—É—Ä–∞—Ç–æ—Ä –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.",
    "–º–æ–∂–Ω–æ –ª–∏ —Å–º–µ–Ω–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è": "–î–∞, –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –∫ –¥—Ä—É–≥–æ–º—É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é.",

    # –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    "—á—Ç–æ –±—Ä–∞—Ç—å –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ": "–¢–µ—Ç—Ä–∞–¥—å, —Ä—É—á–∫—É, –∫–∞—Ä–∞–Ω–¥–∞—à, –ª–∏–Ω–µ–π–∫—É, —Å–º–µ–Ω–Ω—É—é –æ–±—É–≤—å. –û—Å—Ç–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–º.",
    "–µ—Å—Ç—å –ª–∏ –≥–∞—Ä–¥–µ—Ä–æ–±": "–î–∞, –≤ –æ–±–æ–∏—Ö —Ñ–∏–ª–∏–∞–ª–∞—Ö –µ—Å—Ç—å –≥–∞—Ä–¥–µ—Ä–æ–±.",
    "–≥–¥–µ –º–æ–∂–Ω–æ –æ–∂–∏–¥–∞—Ç—å —Ä–µ–±–µ–Ω–∫–∞": "–í —Ö–æ–ª–ª–µ –µ—Å—Ç—å –∑–æ–Ω–∞ –æ–∂–∏–¥–∞–Ω–∏—è —Å –∫—É–ª–µ—Ä–æ–º –∏ –¥–∏–≤–∞–Ω–∞–º–∏. –ù–æ –ª—É—á—à–µ –ø–æ–π—Ç–∏ –ø–æ–≥—É–ª—è—Ç—å.",
    "–µ—Å—Ç—å –ª–∏ –ø–∞—Ä–∫–æ–≤–∫–∞": "–£ —Ñ–∏–ª–∏–∞–ª–æ–≤ –Ω–∞ –°—Ç—Ä–æ–∏—Ç–µ–ª–µ–π –∏ –£—Ä–∏—Ü–∫–æ–≥–æ –µ—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø–∞—Ä–∫–æ–≤–∫–∏.",
    "–º–æ–∂–Ω–æ –ª–∏ –ø–∏—Ç–∞—Ç—å—Å—è": "–í —Ö–æ–ª–ª–µ –µ—Å—Ç—å –∫—É–ª–µ—Ä —Å –≤–æ–¥–æ–π. –ï–¥—É –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –º–æ–∂–Ω–æ –≤ –ª–∞–Ω—á-–±–æ–∫—Å–∞—Ö. –ù–∞ –ø–µ—Ä–≤–æ–º —ç—Ç–∞–∂–µ (–£—Ä–∏—Ü–∫–æ–≥–æ, 39) –µ—Å—Ç—å –∫–∞—Ñ–µ.",

    # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
    "–Ω—É–∂–µ–Ω –ª–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä": "–¢–æ–ª—å–∫–æ –¥–ª—è –æ–Ω–ª–∞–π–Ω-–∑–∞–Ω—è—Ç–∏–π. –ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.",
    "–∫–∞–∫–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –æ–Ω–ª–∞–π–Ω": "–ò—Å–ø–æ–ª—å–∑—É–µ–º –í–ö–æ–Ω—Ç–∞–∫—Ç–µ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –¥–æ—Å–∫–æ–π.",
    "–µ—Å–ª–∏ –ø—Ä–æ–ø–∞–ª –∏–Ω—Ç–µ—Ä–Ω–µ—Ç": "–ó–∞–ø–∏—Å—å –∑–∞–Ω—è—Ç–∏—è –≤—ã—à–ª–µ–º, –¥–µ–Ω—å–≥–∏ –∑–∞ –∑–∞–Ω—è—Ç–∏–µ –Ω–µ —Å–≥–æ—Ä–∞—é—Ç.",
    "–∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã": "–ü–æ—Å–ª–µ –∑–∞–Ω—è—Ç–∏—è –≤—ã—Å—ã–ª–∞–µ–º —Ñ–∞–π–ª—ã –≤ Telegram-—á–∞—Ç –≥—Ä—É–ø–ø—ã.",
    "–Ω—É–∂–µ–Ω –ª–∏ –ø—Ä–∏–Ω—Ç–µ—Ä": "–ù–µ—Ç, –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–º –≤–∏–¥–µ.",

    # –í–æ–ø—Ä–æ—Å—ã –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
    "–∫–∞–∫–æ–π —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª": "–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –Ω–∞—à–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤ - 25 –∏–∑ 32.",
    "—Å–∫–æ–ª—å–∫–æ –ø—è—Ç–µ—Ä–æ–∫": "–í 2024 –≥–æ–¥—É 70% –Ω–∞—à–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤ –ø–æ–ª—É—á–∏–ª–∏ –ø—è—Ç–µ—Ä–∫–∏.",
    "–µ—Å—Ç—å –ª–∏ –æ—Ç–∑—ã–≤—ã": "–î–∞, –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö 100+ —Ä–µ–∞–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤.",
    "–º–æ–∂–Ω–æ –ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–±–æ—Ç—ã": "–î–∞, —Ö—Ä–∞–Ω–∏–º –≤—Å–µ –ø—Ä–æ–±–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –¥–æ –∫–æ–Ω—Ü–∞ –≥–æ–¥–∞.",
    "–∫–æ–≥–¥–∞ –±—É–¥—É—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã": "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–±–Ω–∏–∫–æ–≤ –≥–æ—Ç–æ–≤—ã —á–µ—Ä–µ–∑ 3 –¥–Ω—è —Å —Ä–∞–∑–±–æ—Ä–æ–º –æ—à–∏–±–æ–∫."
}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id,"–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –û–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –æ—Ç –ö–ª—É–±–∞ –ó–Ω–∞–Ω–∏–π üéì\n")
    if is_user_registered(message.from_user.id):
        bot.send_message(message.chat.id, '–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω')
        show_menu(message)
    else:
        bot.send_message(message.chat.id, '–ù–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω')
        Register_menu(message)
    # bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
    #                  reply_markup=markup)

@bot.message_handler(commands=['register'])
def Register_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_phone = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact=True)
    markup.add(btn_phone)
    bot.send_message(message.chat.id, '–ü—Ä–æ—Å—å–±–∞ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n\n'
                     '1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω\n'
                     '2. –ó–∞—Ç–µ–º –≤–≤–µ–¥–∏—Ç–µ –§–ò–û', reply_markup=markup)

@bot.message_handler(content_types=['contact'])
def handle_contact(message):
   user_id = str(message.from_user.id)#–ø–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   phone = message.contact.phone_number #–ø–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏
   user_data = load_user_data() #–∑–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, –∫–æ—Ç–æ—Ä–∞—è —É–∂–µ –µ—Å—Ç—å
   if user_id not in user_data: #–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º ID –Ω–µ—Ç
       user_data[user_id] = {} #–µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   user_data[user_id]['phone'] = phone #–ø–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
   user_data[user_id]['level_math'] = 0  # –£—Ä–æ–≤–µ–Ω—å –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ
   user_data[user_id]['score_math'] = 0  # –°—á–µ—Ç –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ
   user_data[user_id]['level'] = 0 #—É—Ä–æ–≤–µ–Ω—å —É—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–π–¥–µ–Ω
   save_user_data(user_data) #—Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª –ø–æ–ª—É—á–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
   bot.send_message(message.chat.id,'–í—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã')
   show_menu(message)
#    msg = bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")
#    bot.register_next_step_handler(msg, process_name_step)


@bot.message_handler(content_types=['photo'])
def photoes(message):
    file_id = message.photo[-1].file_id #–∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ—Ä—ë–º —Ñ–æ—Ç–æ.
    # –ò–î —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç–µ —Å –ø–æ–º–æ—â—å—é –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –Ω–µ–º—É –º—ã –ø–æ–ª—É—á–∞–µ–º file id
    file_info = bot.get_file(file_id) #–ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∞–º–æ–º —Ñ–∞–π–ª–µ –ø–æ –µ–≥–æ ID
    download_file = bot.download_file(file_info.file_path) #–∑–∞–≥—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–º—è—Ç—å
    with open('name_file.jpg', 'wb') as new_f: #—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        new_f.write(download_file)
    bot.reply_to(message,'–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ') #–æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é


@bot.message_handler(func=lambda message: message.text == 'üìö –ü—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —Ç–µ–º—ã')
def show_lessons_menu(message):
    bot.send_message(message.chat.id,
                    "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:",
                    reply_markup=topics_markup)

@bot.message_handler(func=lambda message: message.text in ['–£—Ä–æ–∫ 1: –ê–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è',
                                                         '–£—Ä–æ–∫ 2: –ì–µ–æ–º–µ—Ç—Ä–∏—è —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤'])
def send_lesson_info(message):
    if message.text == '–£—Ä–æ–∫ 1: –ê–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è':
        response = ("üìö <b>–£—Ä–æ–∫ 1: –ê–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è</b>\n\n"
                    "üìå <b>–ü—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —Ç–µ–º—ã:</b>\n"
                    "- –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–π\n"
                    "- –§–æ—Ä–º—É–ª—ã —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è\n"
                    "- –†–∞–∑–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –º–Ω–æ–∂–∏—Ç–µ–ª–∏\n\n"
                    "üìù <b>–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ:</b>\n"
                    "1. –£—á–µ–±–Ω–∏–∫: —Å—Ç—Ä. 45-48, ‚Ññ12-15\n"
                    "2. –†–∞–±–æ—á–∞—è —Ç–µ—Ç—Ä–∞–¥—å: —Å—Ç—Ä. 22-25")
    else:
        response = ("üìö <b>–£—Ä–æ–∫ 2: –ì–µ–æ–º–µ—Ç—Ä–∏—è —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤</b>\n\n"
                    "üìå <b>–ü—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —Ç–µ–º—ã:</b>\n"
                    "- –¢–µ–æ—Ä–µ–º–∞ –ü–∏—Ñ–∞–≥–æ—Ä–∞\n"
                    "- –ü—Ä–∏–∑–Ω–∞–∫–∏ –ø–æ–¥–æ–±–∏—è\n"
                    "- –°–≤–æ–π—Å—Ç–≤–∞ –º–µ–¥–∏–∞–Ω\n\n"
                    "üìù <b>–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ:</b>\n"
                    "1. –£—á–µ–±–Ω–∏–∫: —Å—Ç—Ä. 78-82, ‚Ññ8-12\n"
                    "2. –†–∞–±–æ—á–∞—è —Ç–µ—Ç—Ä–∞–¥—å: —Å—Ç—Ä. 35-38")

    bot.send_message(message.chat.id, response, parse_mode='HTML')



@bot.callback_query_handler(func=lambda call: call.data.startswith('faq_'))
def handle_faq_categories(call):
    if call.data == 'faq_price':
        text = "üíµ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b>\n\n" + "\n".join(
            [v for k,v in FAQ.items() if '—Å—Ç–æ–∏–º–æ—Å—Ç—å' in k or '–∞–±–æ–Ω–µ–º–µ–Ω—Ç' in k or '–æ–ø–ª–∞—Ç–∞' in k])
    elif call.data == 'faq_schedule':
        text = "üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:</b>\n\n" + "\n".join(
            [v for k,v in FAQ.items() if '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ' in k or '–∑–∞–Ω—è—Ç–∏–π' in k or '–Ω–∞—á–∞–ª–æ' in k])
    else:
        text = "üìù <b>–ó–∞–ø–∏—Å—å:</b>\n\n" + "\n".join(
            [v for k,v in FAQ.items() if '–∑–∞–ø–∏—Å' in k or '–ø—Ä–µ–¥–æ–ø–ª–∞—Ç' in k or '–æ–Ω–ª–∞–π–Ω' in k])

    bot.edit_message_text(chat_id=call.message.chat.id,
                        message_id=call.message.message_id,
                        text=text,
                        parse_mode='HTML')



# –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ü–û–°–õ–ï–î–ù–ò–ú
@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    if message.text == 'üìã –û–± –û–ì–≠':
      response = ("üìå <b>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –û–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ:</b>\n\n"
                  "üîπ <b>–§–æ—Ä–º–∞—Ç —ç–∫–∑–∞–º–µ–Ω–∞:</b>\n"
                  "2 –º–æ–¥—É–ª—è: –ê–ª–≥–µ–±—Ä–∞ –∏ –ì–µ–æ–º–µ—Ç—Ä–∏—è\n"
                  "26 –∑–∞–¥–∞–Ω–∏–π (20 –±–∞–∑–æ–≤—ã—Ö, 6 –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏)\n\n"
                  "üîπ <b>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b> 3 —á–∞—Å–∞ 55 –º–∏–Ω—É—Ç\n\n"
                  "üîπ <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª:</b> 8 (–∏–∑ 32)\n\n"
                  "üìÖ <b>–î–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è 2025:</b>\n"
                  "–û—Å–Ω–æ–≤–Ω–æ–π –ø–µ—Ä–∏–æ–¥: 20 –º–∞—è\n"
                  "–†–µ–∑–µ—Ä–≤–Ω—ã–µ –¥–Ω–∏: 26 –∏—é–Ω—è, 2 –∏—é–ª—è")
      bot.send_message(message.chat.id, response, parse_mode='HTML')
    elif str(message.text).lower() == '–ø—Ä–∏–≤–µ—Ç':
        bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç!")
    elif message.text == '–ò–≥—Ä–∞ –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫—É':
       markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
       markup.add("–ú–µ–Ω—é", "–ù–∞—á–∞—Ç—å!")
       msg = bot.send_message(
           message.chat.id,
           "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–≤–∏–∑\n–Ω–∞–∂–º–∏—Ç–µ –Ω–∞—á–∞—Ç—å",
           reply_markup=markup)
       bot.register_next_step_handler(msg, math_game)
    elif message.text == "–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ":
        user_data = load_user_data()
        user_id = str(message.from_user.id)
        level = user_data[user_id]['level']#–≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ—Å—Ç–∞–≤–∏–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —É—Ä–æ–≤–Ω—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏

        #–µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —É—Ä–æ–∫–∏, –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–∞–ø–∏—à–∏—Ç–µ level = 4
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add('–ú–µ–Ω—é')
        avalible_lessons = list(lessons.keys())[0:level+1]#–ø—Ä–∏ —Ç–∞–∫–æ–º –æ–±—Ä–µ–∑–∞–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ - [0,2)
        for lesson in avalible_lessons:
            markup.add(types.KeyboardButton(lesson))
        msg = bot.send_message(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è',
                               reply_markup=markup)
        bot.register_next_step_handler(msg,lesson_selection)###

    elif message.text == '–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ':
        user_data = load_user_data()
        user_id = str(message.from_user.id)
        level = user_data[user_id]['level']
        markup = types.ReplyKeyboardMarkup()
        for i in range(level+1):
            markup.add(f'{i+1}')
        markup.add('–ú–µ–Ω—é')
        msg = bot.send_message(user_id,"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è",
                               reply_markup=markup)
        bot.register_next_step_handler(msg, test_mode)


    elif message.text == 'üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
      response = ("üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π:</b>\n\n"
                  "<b>–ö–ª—É–± –ó–Ω–∞–Ω–∏–π –Ω–∞ –£—Ä–∏—Ü–∫–æ–≥–æ, 39:</b>\n"
                  "–í–¢: 17:00-18:00 (–≥—Ä—É–ø–ø–∞ –ê)\n"
                  "<b>–ö–ª—É–± –ó–Ω–∞–Ω–∏–π –Ω–∞ –°—Ç—Ä–æ–∏—Ç–µ–ª–µ–π, 15:</b>\n"
                  "–°—Ä/–ü—è: 18:00-19:00 (–≥—Ä—É–ø–ø–∞ –°+–í)\n"
                  "–°–±: 16:00-17:00 (–∏–Ω—Ç–µ–Ω—Å–∏–≤)")
      bot.send_message(message.chat.id, response, parse_mode='HTML')
    elif message.text == 'üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è':
      response = ("üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –∑–∞–ø–∏—Å–∏:</b>\n\n"
                  "–¢–µ–ª–µ—Ñ–æ–Ω: +7 (980) 970-51-22\n"
                  "WhatsApp: https://wa.me/79806505637\n\n"
                  "üè´ <b>–ê–¥—Ä–µ—Å–∞:</b>\n"
                  "‚Ä¢ –£—Ä–∏—Ü–∫–æ–≥–æ, 39 (–≥–ª–∞–≤–Ω—ã–π –æ—Ñ–∏—Å)\n"
                  "‚Ä¢ –°—Ç—Ä–æ–∏—Ç–µ–ª–µ–π, 15 (–Ω–æ–≤—ã–π —Ñ–∏–ª–∏–∞–ª)\n\n"
                  "‚è∞ <b>–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:</b> 10:00-19:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ")

      markup = types.InlineKeyboardMarkup()
      btn_call = types.InlineKeyboardButton("üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å", callback_data='call')
      btn_whatsapp = types.InlineKeyboardButton("WhatsApp", url='https://wa.me/79806505637')
      markup.add(btn_call, btn_whatsapp)

      bot.send_message(message.chat.id, response, parse_mode='HTML', reply_markup=markup)
    elif message.text == 'üîô –ù–∞–∑–∞–¥':
      show_menu(message)
    elif message.text == '‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã':
      markup = types.InlineKeyboardMarkup()
      btn1 = types.InlineKeyboardButton("–°—Ç–æ–∏–º–æ—Å—Ç—å", callback_data='faq_price')
      btn2 = types.InlineKeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data='faq_schedule')
      btn3 = types.InlineKeyboardButton("–ó–∞–ø–∏—Å—å", callback_data='faq_signup')
      markup.add(btn1, btn2, btn3)

      bot.send_message(message.chat.id,
                   "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–æ–ø—Ä–æ—Å–æ–≤:",
                   reply_markup=markup)

    elif message.text == '–ú–µ–Ω—é':
      show_menu(message)
    else:
    # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ –º–µ–Ω—é, –∏—â–µ–º –≤ FAQ
      text = message.text.lower()
      for keyword, answer in FAQ.items():
          if keyword in text:
              bot.reply_to(message, answer)
              return

    # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω
          else:
            bot.reply_to(message, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –≤–æ–ø—Ä–æ—Å. –í—ã –º–æ–∂–µ—Ç–µ:\n"
                            "1. –ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å\n"
                            "2. –ü–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞–º: +7 (910) 970-51-22\n"
                            "3. –í—ã–±—Ä–∞—Ç—å —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é")
            show_menu(message)
            return


bot.polling()